#[derive(Clone, Copy, Debug)]
pub enum ProjectType {
    Android,
    Angular,
    // Assembly,
    // CCPlusPlus,
    CCPlusPlusCMake,
    // CPlusPlus,
    // CSharp,
    CSharpDotNetCore,
    CSharpVisualBasicFDotNetFramework,
    Clojure,
    Crystal,
    DartFlutter,
    // DotNET,
    Elixir,
    // FSharp,
    FSharpDotNetCore,
    Go,
    // Gradle,
    HaskellCabal,
    HaskellStack,
    // IOSMacOS,
    // IOSMacOSXcode,
    JavaGradle,
    JavaMaven,
    JavaScriptGrunt,
    JavaScriptGulp,
    JavaScriptWebpack,
    NodeJs,
    // NuGet,
    PHP,
    Python,
    PythonPipenv,
    PythonPoetry,
    PythonSetuptools,
    Qt,
    Ruby,
    RubyRake,
    Rust,
    // Scala,
    TypeScript,
    // VBNET,
    VisualBasicDotNetCore,
}

pub const PROJECT_FILES: &[(&str, ProjectType)] = &[
    ("angular.json", ProjectType::Angular),
    ("package.json", ProjectType::NodeJs),
    ("go.mod", ProjectType::Go),
    ("Cargo.toml", ProjectType::Rust),
    ("composer.json", ProjectType::PHP),
    ("requirements.txt", ProjectType::Python),
    ("Gemfile", ProjectType::Ruby),
    ("pom.xml", ProjectType::JavaMaven),
    ("build.gradle", ProjectType::JavaGradle),
    ("*.csproj", ProjectType::CSharpDotNetCore),
    ("*.vbproj", ProjectType::VisualBasicDotNetCore),
    ("*.fsproj", ProjectType::FSharpDotNetCore),
    ("*.sln", ProjectType::CSharpVisualBasicFDotNetFramework),
    ("CMakeLists.txt", ProjectType::CCPlusPlusCMake),
    ("Rakefile", ProjectType::RubyRake),
    ("Gruntfile.js", ProjectType::JavaScriptGrunt),
    ("Gulpfile.js", ProjectType::JavaScriptGulp),
    ("webpack.config.js", ProjectType::JavaScriptWebpack),
    ("tsconfig.json", ProjectType::TypeScript),
    ("pyproject.toml", ProjectType::PythonPoetry),
    ("setup.py", ProjectType::PythonSetuptools),
    ("Pipfile", ProjectType::PythonPipenv),
    ("mix.exs", ProjectType::Elixir),
    ("shard.yml", ProjectType::Crystal),
    ("pubspec.yaml", ProjectType::DartFlutter),
    ("project.clj", ProjectType::Clojure),
    ("stack.yaml", ProjectType::HaskellStack),
    ("*.cabal", ProjectType::HaskellCabal),
    ("*.pro", ProjectType::Qt),
    ("AndroidManifest.xml", ProjectType::Android),
];